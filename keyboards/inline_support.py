import random

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData
from aiogram import Dispatcher, Bot
from config import load_config


support_callback = CallbackData("ask_support", "messages", "user_id", "as_user")
cancel_support_callback = CallbackData("cancel_support", "user_id")

support_ids = [1064938479]

config = load_config(".env")
bot = Bot(token=config.tg_bot.token)
dp = Dispatcher(bot)


async def check_support_available(support_id):
    state = dp.current_state(chat=support_id, user=support_id)
    state_str = str(
        await state.get_state()
    )
    if state_str == "in_support":
        return
    else:
        return support_id


async def get_support_manager():
    random.shuffle(support_ids)
    for support_id in support_ids:
        # –ü—Ä–æ–≤–µ—Ä–∏–º –µ—Å–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä –≤ –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –Ω–µ –∑–∞–Ω—è—Ç
        support_id = await check_support_available(support_id)

        # –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –Ω–∞—à–ª–∏, —á—Ç–æ –≤—ã–≤–æ–¥–∏–º
        if support_id:
            return support_id
    else:
        return


async def support_keyboard(messages, user_id=None):
    if user_id:
        # –ï—Å–ª–µ —É–∫–∞–∑–∞–Ω –≤—Ç–æ—Ä–æ–π –∞–π–¥–∏—à–Ω–∏–∫ - –∑–Ω–∞—á–∏—Ç —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞

        contact_id = int(user_id)
        as_user = "no"
        text = "üëâ –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É —â–æ–± –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏"

    else:
        # –ï—Å–ª–µ –Ω–µ —É–∫–∞–∑–∞–Ω –≤—Ç–æ—Ä–æ–π –∞–π–¥–∏—à–Ω–∏–∫ - –∑–Ω–∞—á–∏—Ç —ç—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –∏ –Ω—É–∂–Ω–æ –ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–ª—è –Ω–µ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞

        contact_id = await get_support_manager()
        as_user = "yes"
        if messages == "many" and contact_id is None:
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ - –≤—ã—Ö–æ–¥–∏–º –∏ –≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ –µ–≥–æ –Ω–µ—Ç
            return False
        elif messages == "one" and contact_id is None:
            contact_id = random.choice(support_ids)

        if messages == "one":
            text = "üëâ –ù–∞–ø–∏—Å–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Ç–µ—Ö–ø—ñ–¥—Ç—Ä–∏–º–∫—É –Ω–∞–∂–º—ñ—Ç—å –Ω–∞ —Ü—é –∫–Ω–æ–ø–∫—É"
        else:
            text = "–ù–∞–ø–∏—Å–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É"

    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton(
            text=text,
            callback_data=support_callback.new(
                messages=messages,
                user_id=contact_id,
                as_user=as_user
            )
        )
    )

    if messages == "many":
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ–∞–Ω—Å–∞, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –∑–≤–æ–Ω–∏—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
        keyboard.add(
            InlineKeyboardButton(
                text="–ó–∞–∫—ñ–Ω—á–∏—Ç—å —Å–µ–∞–Ω—Å",
                callback_data=cancel_support_callback.new(
                    user_id=contact_id
                )
            )
        )
    return keyboard


def cancel_support(user_id):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="–ó–∞–∫—ñ–Ω—á–∏—Ç—å —Å–µ–∞–Ω—Å",
                    callback_data=cancel_support_callback.new(
                        user_id=user_id
                    )
                )
            ]
        ]
    )
